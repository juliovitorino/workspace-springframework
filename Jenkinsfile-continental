pipeline {
    agent any
    stages {
        stage("Build Backend") {
            steps {
                dir('labs-modularization/death-agreement') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        stage("Run Unit Tests") {
            steps {
                dir('labs-modularization/death-agreement') {
                    sh 'mvn test'
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage ('Sonar Analysis') {
            environment {
                scannerHome = tool 'SONAR_SCANNER'
            }
            steps {
                dir('labs-modularization/death-agreement') {
                    withSonarQubeEnv('SONAR_LOCAL') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=Continental -Dsonar.host.url=http://localhost:9000 -Dsonar.login=a46f688e42022aaabf0dfefac6ed543cfcb3ee44 -Dsonar.java.binaries=target/classes -Dsonar.sourceEncoding=UTF-8 -Dsonar.sources=src -Dsonar.language=java -Dsonar.dynamicAnalysis=reuseReports -Dsonar.junit.reportsPath=target/surefire-reports -Dsonar.surefire.reportsPath=target/surefire-reports -Dsonar.jacoco.reportPath=target/jacoco.exec -Dsonar.java.coveragePlugin=jacoco -Dsonar.coverage.exclusions=**/.mvn,**model/**,**exception/**,**config/**,**constantes/**,**Application.java"
                    }
                } 
            }
        }    
        stage ('Response Quality Gate Hook') {
            steps {
                sleep(10)
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }      
    }
}
